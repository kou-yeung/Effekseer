<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\image\icon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="AttractionForces" xml:space="preserve">
    <value>Attraction Forces</value>
  </data>
  <data name="BasicRenderSettings" xml:space="preserve">
    <value>Basic Render Settings</value>
  </data>
  <data name="BasicSettings" xml:space="preserve">
    <value>Basic Settings</value>
  </data>
  <data name="Behavior" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="CameraSettings" xml:space="preserve">
    <value>Camera Settings</value>
  </data>
  <data name="Culling" xml:space="preserve">
    <value>Culling</value>
  </data>
  <data name="FCurves" xml:space="preserve">
    <value>F-Curves</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Network" xml:space="preserve">
    <value>Network</value>
  </data>
  <data name="FileViewer" xml:space="preserve">
    <value>File Viewer</value>
  </data>
  <data name="NodeTree" xml:space="preserve">
    <value>Node Tree</value>
    <comment>MainFrom:ReloadMenu</comment>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Recorder" xml:space="preserve">
    <value>Recorder</value>
  </data>
  <data name="RenderSettings" xml:space="preserve">
    <value>Render Settings</value>
  </data>
  <data name="ResetWindow" xml:space="preserve">
    <value>Reset Window Position</value>
  </data>
  <data name="Rotation" xml:space="preserve">
    <value>Rotation</value>
  </data>
  <data name="Scale" xml:space="preserve">
    <value>Scale</value>
  </data>
  <data name="Sound" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="SpawningMethod" xml:space="preserve">
    <value>Spawning Method</value>
  </data>
  <data name="ViewerControls" xml:space="preserve">
    <value>Viewer Controls</value>
  </data>
  <data name="Window" xml:space="preserve">
    <value>Window</value>
  </data>
  <data name="ConfirmSaveChanged" xml:space="preserve">
    <value>[{0}] has been changed. Do you want to save?</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="Deviation" xml:space="preserve">
    <value>Deviation</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="Mean" xml:space="preserve">
    <value>Mean</value>
  </data>
  <data name="Min" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="NetworkConnected" xml:space="preserve">
    <value>State：Connected</value>
  </data>
  <data name="NetworkDisconnected" xml:space="preserve">
    <value>State：Disconnected</value>
  </data>
  <data name="NotAbsolutePathError" xml:space="preserve">
    <value>This is not an absolute path.</value>
  </data>
  <data name="ProjectFilter" xml:space="preserve">
    <value>Effekseer Project (*.efkproj)|*.efkproj</value>
  </data>
  <data name="RecentFiles" xml:space="preserve">
    <value>Recent Files</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value> *Unsaved Changes</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="AboutEffekseer" xml:space="preserve">
    <value>About Effekseer</value>
  </data>
  <data name="AutoConnect" xml:space="preserve">
    <value>Auto-connect</value>
  </data>
  <data name="CameraMode" xml:space="preserve">
    <value>Camera Mode</value>
  </data>
  <data name="Complement" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="EndFrame" xml:space="preserve">
    <value>End Frame</value>
  </data>
  <data name="ExportAsAvi" xml:space="preserve">
    <value>Export as a AVI</value>
  </data>
  <data name="ExportAsGifAnimation" xml:space="preserve">
    <value>Export as a gif animation</value>
  </data>
  <data name="ExportAsImages" xml:space="preserve">
    <value>Export as images</value>
  </data>
  <data name="ExportAsSingleImage" xml:space="preserve">
    <value>Export as a single image</value>
  </data>
  <data name="ExportedFrame" xml:space="preserve">
    <value>Exported frame</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="Frame" xml:space="preserve">
    <value>Frame</value>
  </data>
  <data name="Frequency_Frame" xml:space="preserve">
    <value>Frequency(Frame)</value>
  </data>
  <data name="Gauss" xml:space="preserve">
    <value>Gauss</value>
  </data>
  <data name="GenerateAlpha" xml:space="preserve">
    <value>Generate alpha</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="Infinite" xml:space="preserve">
    <value>Infinite</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="MakeTransparent" xml:space="preserve">
    <value>Make transparent</value>
  </data>
  <data name="NetworkAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="NetworkState" xml:space="preserve">
    <value>State：</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Offset" xml:space="preserve">
    <value>Offset</value>
  </data>
  <data name="PlayString" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="PoVDistance" xml:space="preserve">
    <value>PoV Distance</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>Range</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="Render" xml:space="preserve">
    <value>Render</value>
  </data>
  <data name="Resolution" xml:space="preserve">
    <value>Resolution</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="Sampling" xml:space="preserve">
    <value>Sampling</value>
  </data>
  <data name="SendData" xml:space="preserve">
    <value>Send Data</value>
  </data>
  <data name="ShowGuide" xml:space="preserve">
    <value>Show guide</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StartFrame" xml:space="preserve">
    <value>Start Frame</value>
  </data>
  <data name="TransmitDataOnEdit" xml:space="preserve">
    <value>Transmit data on edit</value>
  </data>
  <data name="TransmitDataOnLoad" xml:space="preserve">
    <value>Transmit data on load</value>
  </data>
  <data name="TransmitDataOnSave" xml:space="preserve">
    <value>Transmit data on save</value>
  </data>
  <data name="UseOriginalImage" xml:space="preserve">
    <value>Use original image</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Val</value>
  </data>
  <data name="Viewer" xml:space="preserve">
    <value>Viewer</value>
  </data>
  <data name="Viewpoint" xml:space="preserve">
    <value>Viewpoint</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="X" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="XCount" xml:space="preserve">
    <value>X Count</value>
  </data>
  <data name="XRotation" xml:space="preserve">
    <value>X Rotation</value>
  </data>
  <data name="Y" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="YRotation" xml:space="preserve">
    <value>Y Rotation</value>
  </data>
  <data name="Zoom" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Del</value>
  </data>
  <data name="ImageFilter" xml:space="preserve">
    <value>Image File (*.png)|*.png</value>
  </data>
  <data name="ModelFilter" xml:space="preserve">
    <value>Model File (*.efkmodel,fbx,mqo)|*.efkmodel;*.fbx;*mqo</value>
  </data>
  <data name="SoundFilter" xml:space="preserve">
    <value>Sound File (*.wav)|*.wav</value>
  </data>
  <data name="InternalNew" xml:space="preserve">
    <value>New Project</value>
  </data>
  <data name="InternalAbout" xml:space="preserve">
    <value>About Effekseer</value>
  </data>
  <data name="InternalAddNode" xml:space="preserve">
    <value>Add Node</value>
  </data>
  <data name="InternalBaskStep" xml:space="preserve">
    <value>Step(Back)</value>
  </data>
  <data name="InternalCopy" xml:space="preserve">
    <value>Copy Node</value>
  </data>
  <data name="InternalExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="InternalInsertNode" xml:space="preserve">
    <value>Insert Node</value>
  </data>
  <data name="InternalOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="InternalOpenSample" xml:space="preserve">
    <value>Open Sample Project</value>
  </data>
  <data name="InternalOverwrite" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="InternalPaste" xml:space="preserve">
    <value>Paste Node</value>
  </data>
  <data name="InternalPasteInfo" xml:space="preserve">
    <value>Paste Node Info</value>
  </data>
  <data name="InternalPauseOrResume" xml:space="preserve">
    <value>Pause/Resume</value>
  </data>
  <data name="InternalRedo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="InternalRemoveNode" xml:space="preserve">
    <value>Delete Node</value>
  </data>
  <data name="InternalSaveAs" xml:space="preserve">
    <value>Save as...</value>
  </data>
  <data name="InternalStep" xml:space="preserve">
    <value>Step</value>
  </data>
  <data name="InternalStop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="InternalUndo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="InternalViewHelp" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="ResetMaginification" xml:space="preserve">
    <value>Reset maginification</value>
  </data>
</root>